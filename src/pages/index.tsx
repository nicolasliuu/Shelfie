/* eslint-disable */
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import * as tf from '@tensorflow/tfjs';
import * as cocoSsd from '@tensorflow-models/coco-ssd';

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Shelfie</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/public/red rider marshie.png" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#F7F4F3] to-[#6F4982]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-[#1E2151] sm:text-[5rem]">
            Welcome to <span className="text-[#6F4982]">Shelfie</span>
          </h1>
          <h2 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem">
            We're the next generation of <h3 className="text-center text-[#2A0360] animate-pulse">smart fridge software</h3>
          </h2>
          <Link href="/scan" className="inline-flex items-center space-x-2 bg-[#e4fde1] text-black font-bold py-2 px-4 rounded-lg transition-colors duration-300 shadow-md hover:bg-[#323344] hover:text-white hover:shadow-lg">            
            <span>Get Started &rarr;</span>
          </Link>

        </div>
      </main>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined },
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
